{% assign product_id = section.id | append: '-' | append: product.handle | append: '-atc' %}
{% assign product_atc_id = product_id | append: '-atc' %}

<div id="{{ product_id }}" class="{{ class }}">
  <a href="{{ product.url | default: "/" }}">
    <div class="tw-w-full {% if video_aspect == true %} tw-aspect-video tw-border tw-rounded-lg tw- {% else %} xl:tw-h-[500px] ld:tw-h-[420px] md:tw-h-96 tw-h-64 {% endif %} md:tw-mb-3 tw-mb-2">
      {% if product.featured_image != blank %}
        <picture>
          <source
            media="(max-width: 800px)"
            srcset="
              {{ product.image | image_url: width: 400 }} 1x,
              {{ product.image | image_url: width: 800 }} 2x,
            "
          >
          {{
            product.featured_image
            | image_url: width: 800
            | image_tag:
              widths: '400, 800',
              sizes: '(min-width: 1000px) 760px, (min-width: 800px) calc(100vw - 380px), (min-width: 400px) 298px, 78.75vw',
              class: 'tw-size-full tw-object-cover tw-rounded-lg'
          }}
        </picture>
      {% else %}
        <div class="tw-border tw-border-black tw-size-full">
          {{ 'product-1' | placeholder_svg_tag: 'tw-w-full tw-max-w-[450px] tw-mx-auto tw-object-cover' }}
        </div>
      {% endif %}
    </div>
  </a>
  <div class="tw-flex tw-w-full tw-justify-between tw-gap-x-10 tw-gap-y-5 tw-items-start">
    <div>
      <div class="tw-flex tw-flex-wrap tw-gap-3 tw-items-center">
        <a href="{{ product.url | default: "/" }}">
          <h3 class="tw-font-bold tw-text-black">
            {{ product.title | default: 'Product title' }}
          </h3>
        </a>
        {% if product_dimensions != blank %}
          <p class="tw-opacity-75 md:tw-text-14 tw-text-12">{{ product_dimensions }}</p>
        {% endif %}
      </div>

      {% if shop.metafields.loox.global_stats %}
        {% assign looxstats = shop.metafields.loox.global_stats | split: ',' %}
        {% assign reviews_count = looxstats[0] | round %}

        <a href="/pages/reviews" class="tw-flex tw-flex-wrap md:tw-gap-3 tw-gap-2 tw-items-center">
          <div
            role="img"
            aria-label="{{ reviews_count }} star rating"
            class="tw-flex md:tw-gap-1 tw-gap-0 tw-items-center"
          >
            {% for star in (1..reviews_count) %}
              {% render 'icon-star', class: 'md:tw-w-4 tw-w-3' %}
            {% endfor %}
          </div>
          <p class="md:tw-text-14 tw-text-nowrap tw-text-12">(See Reviews)</p>
        </a>
      {% endif %}

      <p
        class="md:tw-text-14 tw-text-12"
        aria-label="Product price is {{ product.price | money | default: '$494.95' }}"
      >
        {{ product.price | money | default: '$494.95' }}
      </p>
    </div>

    <button
      type="submit"
      v-if="!addingToCart"
      @click="addToCart()"
      class="tw-bg-black tw-pointer-events-auto hover:tw-bg-offblack hover:tw-border-offblack tw-border-black tw-text-white tw-w-fit tw-flex tw-justify-center tw-border-2 tw-py-2 tw-px-10 tw-transition-button duration-200 ease-in-out tw-font-semibold tw-font-montserrat hover:tw-scale-[102%]"
    >
      Add to Cart
    </button>
    <div
      class="tw-bg-black hover:tw-bg-offblack hover:tw-border-offblack tw-border-black tw-text-white tw-w-fit tw-flex tw-justify-center tw-border-2 tw-py-3 tw-px-10 tw-transition-button duration-200 ease-in-out tw-font-semibold tw-font-montserrat hover:tw-scale-[102%]"
      v-if="addingToCart"
    >
      <i class="fal fa-spin fa-spinner"></i>
    </div>
  </div>
</div>

<script>
  new Vue({
    el: '#{{ product_id }}',
    data() {
      return {
        addingToCart: false,
        productPrice: '{{ product.price }}',
      };
    },
    methods: {
      addToCart() {
        this.addingToCart = true;
        let items = [
          {
            quantity: 1,
            id: '{{ product.selected_or_first_available_variant.id }}',
          },
        ];
        console.log(items);

        axios
          .post('/cart/add.js', {
            items: items,
          })
          .then((response) => {
            console.log(response);
            this.bus.$emit('showCart');
            this.bus.$emit('refreshCart');
            this.addingToCart = false;
            this.$forceUpdate();
          })
          .catch((error) => {
            console.log(error.response, 'caught error');
            Swal.fire({
              icon: 'error',
              text: error.response.data.description,
            });
            this.addingToCart = false;
          })
          .finally(() => {
            this.addingToCart = false;
          });
      },
    },
    mounted() {
      console.log('{{ product_id }}');
    },
  });
</script>
